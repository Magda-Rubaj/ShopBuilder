version: '3'

services:
  catalog-db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${CATALOG_DBNAME}
      - POSTGRES_USER=${CATALOG_DBUSER}
      - POSTGRES_PASSWORD=${CATALOG_DBPASSWORD}
    logging:
      driver: none
    volumes: 
      - catalog-db:/var/lib/postgresql/data
    networks:
      - sb

  catalog:
    container_name: catalog
    build:
      context: ./src/services/catalog
      dockerfile: Dockerfile
    command: python main.py
    working_dir: /usr/bin/catalog
    restart: on-failure
    environment:
      - DBNAME=${CATALOG_DBNAME}
      - DBUSER=${CATALOG_DBUSER}
      - DBPASSWORD=${CATALOG_DBPASSWORD}
      - AMQP_URL=${AMQP_URL}
    networks:
      - sb
    links:
      - rabbitmq
      - catalog-db
    depends_on:
      - rabbitmq
      - catalog-db

  orders-db:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${ORDERS_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${ORDERS_DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${ORDERS_DB_NAME}
    ports:
      - 27017:27017
    volumes:
      - orders-db:/data/db
    networks:
      - sb
  
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ORDERS_DB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ORDERS_DB_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=orders-db
      - ME_CONFIG_MONGODB_PORT="27017"
    ports:
      - "0.0.0.0:8081:8081"
    networks:
      - sb
    depends_on:
      - orders-db

  orders:
    build:
      context: ./src/services/orders
      dockerfile: Dockerfile
    command: python main.py
    working_dir: /usr/bin/orders
    restart: on-failure
    environment:   
      - SECRET_KEY=${ORDERS_SECRET_KEY}
      - DB_URL=${ORDERS_DB_URL}
      - DB_NAME=${ORDERS_DB_NAME}
      - AMQP_URL=${AMQP_URL}
    links:
      - rabbitmq
      - orders-db
    networks:
      - sb
    depends_on:
      - rabbitmq
    ports:
      - "8888:8888"

  basket-store:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - sb
    
  basket:
    build:
      context: ./src/services/basket
      dockerfile: Dockerfile
    command: python main.py
    working_dir: /usr/bin/basket
    restart: on-failure
    links:
      - rabbitmq
      - basket-store
    networks:
      - sb
    depends_on:
      - rabbitmq
    ports:
      - "5555:5555"

  gateway:
    build:
      context: ./src/gateways
      dockerfile: Dockerfile
    command: python main.py
    working_dir: /usr/bin/gateway
    restart: on-failure
    environment:   
      - CATALOG_URL=${CATALOG_URL}
    networks:
      - sb
    depends_on:
      - catalog
      - orders
    ports:
      - "8000:8000"

  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:3-management-alpine
    logging:
      driver: none
    networks:
      - sb
    ports:
      - 5672:5672
      - 15672:15672


volumes:
  catalog-db:
    driver: local
  orders-db:
    driver: local

networks:
    sb:
      driver: bridge